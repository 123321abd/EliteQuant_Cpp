# CMake generated Testfile for 
# Source directory: D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/tests
# Build directory: D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_system "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_system.exe")
  set_tests_properties(test_system PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_system "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_system.exe")
  set_tests_properties(test_system PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_system "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_system.exe")
  set_tests_properties(test_system PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_system "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_system.exe")
  set_tests_properties(test_system PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_system NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_pair_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_pair_inproc.exe")
  set_tests_properties(test_pair_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_pair_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_pair_inproc.exe")
  set_tests_properties(test_pair_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_pair_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_pair_inproc.exe")
  set_tests_properties(test_pair_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_pair_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_pair_inproc.exe")
  set_tests_properties(test_pair_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_pair_inproc NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_pair_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_pair_tcp.exe")
  set_tests_properties(test_pair_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_pair_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_pair_tcp.exe")
  set_tests_properties(test_pair_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_pair_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_pair_tcp.exe")
  set_tests_properties(test_pair_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_pair_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_pair_tcp.exe")
  set_tests_properties(test_pair_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_pair_tcp NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_reqrep_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_reqrep_inproc.exe")
  set_tests_properties(test_reqrep_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_reqrep_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_reqrep_inproc.exe")
  set_tests_properties(test_reqrep_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_reqrep_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_reqrep_inproc.exe")
  set_tests_properties(test_reqrep_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_reqrep_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_reqrep_inproc.exe")
  set_tests_properties(test_reqrep_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_reqrep_inproc NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_reqrep_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_reqrep_tcp.exe")
  set_tests_properties(test_reqrep_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_reqrep_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_reqrep_tcp.exe")
  set_tests_properties(test_reqrep_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_reqrep_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_reqrep_tcp.exe")
  set_tests_properties(test_reqrep_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_reqrep_tcp "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_reqrep_tcp.exe")
  set_tests_properties(test_reqrep_tcp PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_reqrep_tcp NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_hwm "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_hwm.exe")
  set_tests_properties(test_hwm PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_hwm "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_hwm.exe")
  set_tests_properties(test_hwm PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_hwm "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_hwm.exe")
  set_tests_properties(test_hwm PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_hwm "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_hwm.exe")
  set_tests_properties(test_hwm PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_hwm NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_hwm_pubsub "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_hwm_pubsub.exe")
  set_tests_properties(test_hwm_pubsub PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_hwm_pubsub "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_hwm_pubsub.exe")
  set_tests_properties(test_hwm_pubsub PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_hwm_pubsub "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_hwm_pubsub.exe")
  set_tests_properties(test_hwm_pubsub PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_hwm_pubsub "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_hwm_pubsub.exe")
  set_tests_properties(test_hwm_pubsub PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_hwm_pubsub NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_reqrep_device "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_reqrep_device.exe")
  set_tests_properties(test_reqrep_device PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_reqrep_device "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_reqrep_device.exe")
  set_tests_properties(test_reqrep_device PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_reqrep_device "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_reqrep_device.exe")
  set_tests_properties(test_reqrep_device PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_reqrep_device "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_reqrep_device.exe")
  set_tests_properties(test_reqrep_device PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_reqrep_device NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_sub_forward "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_sub_forward.exe")
  set_tests_properties(test_sub_forward PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_sub_forward "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_sub_forward.exe")
  set_tests_properties(test_sub_forward PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_sub_forward "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_sub_forward.exe")
  set_tests_properties(test_sub_forward PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_sub_forward "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_sub_forward.exe")
  set_tests_properties(test_sub_forward PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_sub_forward NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_invalid_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_invalid_rep.exe")
  set_tests_properties(test_invalid_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_invalid_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_invalid_rep.exe")
  set_tests_properties(test_invalid_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_invalid_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_invalid_rep.exe")
  set_tests_properties(test_invalid_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_invalid_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_invalid_rep.exe")
  set_tests_properties(test_invalid_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_invalid_rep NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_msg_flags "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_msg_flags.exe")
  set_tests_properties(test_msg_flags PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_msg_flags "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_msg_flags.exe")
  set_tests_properties(test_msg_flags PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_msg_flags "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_msg_flags.exe")
  set_tests_properties(test_msg_flags PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_msg_flags "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_msg_flags.exe")
  set_tests_properties(test_msg_flags PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_msg_flags NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_connect_resolve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_connect_resolve.exe")
  set_tests_properties(test_connect_resolve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_connect_resolve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_connect_resolve.exe")
  set_tests_properties(test_connect_resolve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_connect_resolve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_connect_resolve.exe")
  set_tests_properties(test_connect_resolve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_connect_resolve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_connect_resolve.exe")
  set_tests_properties(test_connect_resolve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_connect_resolve NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_immediate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_immediate.exe")
  set_tests_properties(test_immediate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_immediate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_immediate.exe")
  set_tests_properties(test_immediate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_immediate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_immediate.exe")
  set_tests_properties(test_immediate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_immediate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_immediate.exe")
  set_tests_properties(test_immediate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_immediate NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_last_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_last_endpoint.exe")
  set_tests_properties(test_last_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_last_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_last_endpoint.exe")
  set_tests_properties(test_last_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_last_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_last_endpoint.exe")
  set_tests_properties(test_last_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_last_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_last_endpoint.exe")
  set_tests_properties(test_last_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_last_endpoint NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_term_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_term_endpoint.exe")
  set_tests_properties(test_term_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_term_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_term_endpoint.exe")
  set_tests_properties(test_term_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_term_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_term_endpoint.exe")
  set_tests_properties(test_term_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_term_endpoint "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_term_endpoint.exe")
  set_tests_properties(test_term_endpoint PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_term_endpoint NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_router_mandatory "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_router_mandatory.exe")
  set_tests_properties(test_router_mandatory PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_router_mandatory "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_router_mandatory.exe")
  set_tests_properties(test_router_mandatory PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_router_mandatory "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_router_mandatory.exe")
  set_tests_properties(test_router_mandatory PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_router_mandatory "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_router_mandatory.exe")
  set_tests_properties(test_router_mandatory PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_router_mandatory NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_probe_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_probe_router.exe")
  set_tests_properties(test_probe_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_probe_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_probe_router.exe")
  set_tests_properties(test_probe_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_probe_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_probe_router.exe")
  set_tests_properties(test_probe_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_probe_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_probe_router.exe")
  set_tests_properties(test_probe_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_probe_router NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_stream "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_stream.exe")
  set_tests_properties(test_stream PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_stream "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_stream.exe")
  set_tests_properties(test_stream PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_stream "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_stream.exe")
  set_tests_properties(test_stream PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_stream "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_stream.exe")
  set_tests_properties(test_stream PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_stream NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_stream_empty "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_stream_empty.exe")
  set_tests_properties(test_stream_empty PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_stream_empty "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_stream_empty.exe")
  set_tests_properties(test_stream_empty PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_stream_empty "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_stream_empty.exe")
  set_tests_properties(test_stream_empty PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_stream_empty "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_stream_empty.exe")
  set_tests_properties(test_stream_empty PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_stream_empty NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_stream_disconnect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_stream_disconnect.exe")
  set_tests_properties(test_stream_disconnect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_stream_disconnect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_stream_disconnect.exe")
  set_tests_properties(test_stream_disconnect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_stream_disconnect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_stream_disconnect.exe")
  set_tests_properties(test_stream_disconnect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_stream_disconnect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_stream_disconnect.exe")
  set_tests_properties(test_stream_disconnect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_stream_disconnect NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_disconnect_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_disconnect_inproc.exe")
  set_tests_properties(test_disconnect_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_disconnect_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_disconnect_inproc.exe")
  set_tests_properties(test_disconnect_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_disconnect_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_disconnect_inproc.exe")
  set_tests_properties(test_disconnect_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_disconnect_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_disconnect_inproc.exe")
  set_tests_properties(test_disconnect_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_disconnect_inproc NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_unbind_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_unbind_inproc.exe")
  set_tests_properties(test_unbind_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_unbind_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_unbind_inproc.exe")
  set_tests_properties(test_unbind_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_unbind_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_unbind_inproc.exe")
  set_tests_properties(test_unbind_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_unbind_inproc "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_unbind_inproc.exe")
  set_tests_properties(test_unbind_inproc PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_unbind_inproc NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_unbind_wildcard "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_unbind_wildcard.exe")
  set_tests_properties(test_unbind_wildcard PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_unbind_wildcard "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_unbind_wildcard.exe")
  set_tests_properties(test_unbind_wildcard PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_unbind_wildcard "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_unbind_wildcard.exe")
  set_tests_properties(test_unbind_wildcard PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_unbind_wildcard "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_unbind_wildcard.exe")
  set_tests_properties(test_unbind_wildcard PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_unbind_wildcard NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_ctx_options "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_ctx_options.exe")
  set_tests_properties(test_ctx_options PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_ctx_options "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_ctx_options.exe")
  set_tests_properties(test_ctx_options PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_ctx_options "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_ctx_options.exe")
  set_tests_properties(test_ctx_options PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_ctx_options "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_ctx_options.exe")
  set_tests_properties(test_ctx_options PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_ctx_options NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_ctx_destroy "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_ctx_destroy.exe")
  set_tests_properties(test_ctx_destroy PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_ctx_destroy "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_ctx_destroy.exe")
  set_tests_properties(test_ctx_destroy PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_ctx_destroy "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_ctx_destroy.exe")
  set_tests_properties(test_ctx_destroy PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_ctx_destroy "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_ctx_destroy.exe")
  set_tests_properties(test_ctx_destroy PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_ctx_destroy NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_security_null "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_security_null.exe")
  set_tests_properties(test_security_null PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_security_null "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_security_null.exe")
  set_tests_properties(test_security_null PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_security_null "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_security_null.exe")
  set_tests_properties(test_security_null PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_security_null "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_security_null.exe")
  set_tests_properties(test_security_null PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_security_null NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_security_plain "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_security_plain.exe")
  set_tests_properties(test_security_plain PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_security_plain "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_security_plain.exe")
  set_tests_properties(test_security_plain PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_security_plain "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_security_plain.exe")
  set_tests_properties(test_security_plain PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_security_plain "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_security_plain.exe")
  set_tests_properties(test_security_plain PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_security_plain NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_security_curve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_security_curve.exe")
  set_tests_properties(test_security_curve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_security_curve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_security_curve.exe")
  set_tests_properties(test_security_curve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_security_curve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_security_curve.exe")
  set_tests_properties(test_security_curve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_security_curve "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_security_curve.exe")
  set_tests_properties(test_security_curve PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_security_curve NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_iov "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_iov.exe")
  set_tests_properties(test_iov PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_iov "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_iov.exe")
  set_tests_properties(test_iov PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_iov "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_iov.exe")
  set_tests_properties(test_iov PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_iov "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_iov.exe")
  set_tests_properties(test_iov PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_iov NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_spec_req "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_spec_req.exe")
  set_tests_properties(test_spec_req PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_spec_req "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_spec_req.exe")
  set_tests_properties(test_spec_req PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_spec_req "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_spec_req.exe")
  set_tests_properties(test_spec_req PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_spec_req "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_spec_req.exe")
  set_tests_properties(test_spec_req PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_spec_req NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_spec_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_spec_rep.exe")
  set_tests_properties(test_spec_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_spec_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_spec_rep.exe")
  set_tests_properties(test_spec_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_spec_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_spec_rep.exe")
  set_tests_properties(test_spec_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_spec_rep "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_spec_rep.exe")
  set_tests_properties(test_spec_rep PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_spec_rep NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_spec_dealer "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_spec_dealer.exe")
  set_tests_properties(test_spec_dealer PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_spec_dealer "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_spec_dealer.exe")
  set_tests_properties(test_spec_dealer PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_spec_dealer "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_spec_dealer.exe")
  set_tests_properties(test_spec_dealer PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_spec_dealer "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_spec_dealer.exe")
  set_tests_properties(test_spec_dealer PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_spec_dealer NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_spec_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_spec_router.exe")
  set_tests_properties(test_spec_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_spec_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_spec_router.exe")
  set_tests_properties(test_spec_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_spec_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_spec_router.exe")
  set_tests_properties(test_spec_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_spec_router "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_spec_router.exe")
  set_tests_properties(test_spec_router PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_spec_router NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_spec_pushpull "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_spec_pushpull.exe")
  set_tests_properties(test_spec_pushpull PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_spec_pushpull "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_spec_pushpull.exe")
  set_tests_properties(test_spec_pushpull PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_spec_pushpull "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_spec_pushpull.exe")
  set_tests_properties(test_spec_pushpull PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_spec_pushpull "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_spec_pushpull.exe")
  set_tests_properties(test_spec_pushpull PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_spec_pushpull NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_req_correlate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_req_correlate.exe")
  set_tests_properties(test_req_correlate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_req_correlate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_req_correlate.exe")
  set_tests_properties(test_req_correlate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_req_correlate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_req_correlate.exe")
  set_tests_properties(test_req_correlate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_req_correlate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_req_correlate.exe")
  set_tests_properties(test_req_correlate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_req_correlate NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_req_relaxed "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_req_relaxed.exe")
  set_tests_properties(test_req_relaxed PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_req_relaxed "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_req_relaxed.exe")
  set_tests_properties(test_req_relaxed PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_req_relaxed "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_req_relaxed.exe")
  set_tests_properties(test_req_relaxed PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_req_relaxed "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_req_relaxed.exe")
  set_tests_properties(test_req_relaxed PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_req_relaxed NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_conflate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_conflate.exe")
  set_tests_properties(test_conflate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_conflate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_conflate.exe")
  set_tests_properties(test_conflate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_conflate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_conflate.exe")
  set_tests_properties(test_conflate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_conflate "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_conflate.exe")
  set_tests_properties(test_conflate PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_conflate NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_inproc_connect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_inproc_connect.exe")
  set_tests_properties(test_inproc_connect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_inproc_connect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_inproc_connect.exe")
  set_tests_properties(test_inproc_connect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_inproc_connect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_inproc_connect.exe")
  set_tests_properties(test_inproc_connect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_inproc_connect "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_inproc_connect.exe")
  set_tests_properties(test_inproc_connect PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_inproc_connect NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_issue_566 "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_issue_566.exe")
  set_tests_properties(test_issue_566 PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_issue_566 "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_issue_566.exe")
  set_tests_properties(test_issue_566 PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_issue_566 "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_issue_566.exe")
  set_tests_properties(test_issue_566 PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_issue_566 "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_issue_566.exe")
  set_tests_properties(test_issue_566 PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_issue_566 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_shutdown_stress "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_shutdown_stress.exe")
  set_tests_properties(test_shutdown_stress PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_shutdown_stress "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_shutdown_stress.exe")
  set_tests_properties(test_shutdown_stress PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_shutdown_stress "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_shutdown_stress.exe")
  set_tests_properties(test_shutdown_stress PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_shutdown_stress "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_shutdown_stress.exe")
  set_tests_properties(test_shutdown_stress PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_shutdown_stress NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_timeo "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_timeo.exe")
  set_tests_properties(test_timeo PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_timeo "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_timeo.exe")
  set_tests_properties(test_timeo PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_timeo "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_timeo.exe")
  set_tests_properties(test_timeo PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_timeo "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_timeo.exe")
  set_tests_properties(test_timeo PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_timeo NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_many_sockets "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_many_sockets.exe")
  set_tests_properties(test_many_sockets PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_many_sockets "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_many_sockets.exe")
  set_tests_properties(test_many_sockets PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_many_sockets "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_many_sockets.exe")
  set_tests_properties(test_many_sockets PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_many_sockets "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_many_sockets.exe")
  set_tests_properties(test_many_sockets PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_many_sockets NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_diffserv "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_diffserv.exe")
  set_tests_properties(test_diffserv PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_diffserv "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_diffserv.exe")
  set_tests_properties(test_diffserv PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_diffserv "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_diffserv.exe")
  set_tests_properties(test_diffserv PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_diffserv "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_diffserv.exe")
  set_tests_properties(test_diffserv PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_diffserv NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_connect_rid "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_connect_rid.exe")
  set_tests_properties(test_connect_rid PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_connect_rid "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_connect_rid.exe")
  set_tests_properties(test_connect_rid PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_connect_rid "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_connect_rid.exe")
  set_tests_properties(test_connect_rid PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_connect_rid "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_connect_rid.exe")
  set_tests_properties(test_connect_rid PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_connect_rid NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_xpub_nodrop "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Debug/test_xpub_nodrop.exe")
  set_tests_properties(test_xpub_nodrop PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_xpub_nodrop "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/Release/test_xpub_nodrop.exe")
  set_tests_properties(test_xpub_nodrop PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_xpub_nodrop "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/MinSizeRel/test_xpub_nodrop.exe")
  set_tests_properties(test_xpub_nodrop PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_xpub_nodrop "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/bin/RelWithDebInfo/test_xpub_nodrop.exe")
  set_tests_properties(test_xpub_nodrop PROPERTIES  WORKING_DIRECTORY "D:/Workspace/EliteQuant_Cpp/source/ThirdParty/zeromq/build/lib")
else()
  add_test(test_xpub_nodrop NOT_AVAILABLE)
endif()
